'use client'

import { useState } from 'react'
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog'
import { Button } from '@/components/ui/button'
import { Textarea } from '@/components/ui/textarea'
import { Badge } from '@/components/ui/badge'
import { Settings, Sparkles, Save, RotateCcw } from 'lucide-react'

interface CustomAnalysisPromptProps {
  onPromptChange: (prompt: string) => void
  currentPrompt: string
}

export function CustomAnalysisPrompt({ onPromptChange, currentPrompt }: CustomAnalysisPromptProps) {
  const [prompt, setPrompt] = useState(currentPrompt)
  const [isOpen, setIsOpen] = useState(false)

  // Prompts pr√©d√©finis
  const presetPrompts = [
    {
      name: "Audit Complet",
      description: "Analyse financi√®re compl√®te avec tous les aspects",
      prompt: `Tu es un EXPERT ANALYSTE FINANCIER de niveau international. Effectue une analyse compl√®te et d√©taill√©e de l'entreprise avec :

1. IDENTIFICATION COMPL√àTE
2. ANALYSE FINANCI√àRE APPROFONDIE (3-5 ans)
3. DIAGNOSTIC BANCAIRE & CR√âDIT
4. ANALYSE DES RISQUES
5. PROJECTIONS & SC√âNARIOS
6. RECOMMANDATIONS STRAT√âGIQUES
7. VALORISATION & INVESTISSEMENT

Retourne un JSON structur√© avec toutes les m√©triques financi√®res, ratios cl√©s, projections et recommandations actionnables.`
    },
    {
      name: "Focus Croissance",
      description: "Analyse ax√©e sur le potentiel de croissance",
      prompt: `En tant qu'expert en d√©veloppement d'entreprise, analyse cette soci√©t√© sous l'angle de la CROISSANCE :

1. Potentiel d'expansion (g√©ographique, produits, march√©s)
2. Capacit√© de financement de la croissance
3. Scalabilit√© du mod√®le √©conomique
4. Opportunit√©s d'investissement
5. Strat√©gies de d√©veloppement recommand√©es
6. Valorisation bas√©e sur le potentiel de croissance

Focus sur les recommandations pour doubler l'activit√© en 3 ans.`
    },
    {
      name: "Due Diligence",
      description: "Analyse pour investissement ou rachat",
      prompt: `R√©alise une DUE DILIGENCE financi√®re compl√®te pour un potentiel investissement :

1. V√©rification de la continuit√© d'exploitation
2. Qualit√© des revenus et r√©currence
3. Analyse des risques cach√©s
4. √âvaluation des synergies potentielles
5. Red flags et points d'attention
6. Recommandation d'investissement (GO/NO GO)
7. Fourchette de valorisation justifi√©e

Sois critique et objectif - identifie tous les risques.`
    }
  ]

  const handleSave = () => {
    onPromptChange(prompt)
    setIsOpen(false)
  }

  const handleReset = () => {
    setPrompt(currentPrompt)
  }

  const usePreset = (presetPrompt: string) => {
    setPrompt(presetPrompt)
  }

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>
        <Button variant="outline" size="sm" className="gap-2">
          <Settings className="h-4 w-4" />
          Personnaliser l'analyse
        </Button>
      </DialogTrigger>
      <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Sparkles className="h-5 w-5" />
            Personnaliser le Prompt d'Analyse IA
          </DialogTitle>
        </DialogHeader>

        <div className="space-y-6">
          {/* Prompts pr√©d√©finis */}
          <div>
            <h3 className="text-sm font-medium mb-3">Prompts Pr√©d√©finis</h3>
            <div className="grid gap-3">
              {presetPrompts.map((preset, index) => (
                <div key={index} className="border rounded-lg p-3">
                  <div className="flex items-center justify-between mb-2">
                    <div>
                      <Badge variant="outline" className="mb-1">{preset.name}</Badge>
                      <p className="text-sm text-gray-600">{preset.description}</p>
                    </div>
                    <Button
                      variant="outline"
                      size="sm"
                      onClick={() => usePreset(preset.prompt)}
                    >
                      Utiliser
                    </Button>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* √âditeur de prompt personnalis√© */}
          <div>
            <h3 className="text-sm font-medium mb-3">Prompt Personnalis√©</h3>
            <Textarea
              value={prompt}
              onChange={(e) => setPrompt(e.target.value)}
              placeholder="√âcrivez votre prompt d'analyse personnalis√©..."
              className="min-h-[200px] font-mono text-sm"
            />
            <p className="text-xs text-gray-500 mt-2">
              üí° Conseil : Soyez sp√©cifique sur les aspects √† analyser et le format de sortie souhait√©
            </p>
          </div>

          {/* Actions */}
          <div className="flex justify-between pt-4 border-t">
            <Button variant="outline" onClick={handleReset} className="gap-2">
              <RotateCcw className="h-4 w-4" />
              R√©initialiser
            </Button>
            <div className="space-x-2">
              <Button variant="outline" onClick={() => setIsOpen(false)}>
                Annuler
              </Button>
              <Button onClick={handleSave} className="gap-2">
                <Save className="h-4 w-4" />
                Appliquer le prompt
              </Button>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
}