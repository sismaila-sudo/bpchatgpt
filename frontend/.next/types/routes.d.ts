// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/analytics" | "/auth/auth-code-error" | "/auth/forgot-password" | "/auth/login" | "/auth/register" | "/collaboration" | "/import" | "/profile" | "/projects" | "/projects/[id]" | "/projects/new" | "/projects/new/create" | "/projects/new/existing" | "/projects/new/select" | "/test-auth"
type AppRouteHandlerRoutes = "/api/openai-analysis" | "/api/projects" | "/api/simple/calculate" | "/api/upload-document" | "/auth/callback"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/analytics": {}
  "/api/openai-analysis": {}
  "/api/projects": {}
  "/api/simple/calculate": {}
  "/api/upload-document": {}
  "/auth/auth-code-error": {}
  "/auth/callback": {}
  "/auth/forgot-password": {}
  "/auth/login": {}
  "/auth/register": {}
  "/collaboration": {}
  "/import": {}
  "/profile": {}
  "/projects": {}
  "/projects/[id]": { "id": string; }
  "/projects/new": {}
  "/projects/new/create": {}
  "/projects/new/existing": {}
  "/projects/new/select": {}
  "/test-auth": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
