[debug] [2025-10-04T21:30:31.910Z] ----------------------------------------------------------------------
[debug] [2025-10-04T21:30:31.913Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\admin\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js deploy --only firestore:rules
[debug] [2025-10-04T21:30:31.913Z] CLI Version:   14.17.0
[debug] [2025-10-04T21:30:31.914Z] Platform:      win32
[debug] [2025-10-04T21:30:31.914Z] Node Version:  v24.5.0
[debug] [2025-10-04T21:30:31.914Z] Time:          Sat Oct 04 2025 23:30:31 GMT+0200 (heure d’été d’Europe centrale)
[debug] [2025-10-04T21:30:31.914Z] ----------------------------------------------------------------------
[debug] 
[debug] [2025-10-04T21:30:32.143Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2025-10-04T21:30:32.144Z] > authorizing via signed-in user (sismaila@gmail.com)
[debug] [2025-10-04T21:30:32.144Z] [iam] checking project bpdesign-pro for permissions ["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]
[debug] [2025-10-04T21:30:32.146Z] Checked if tokens are valid: false, expires at: 1759597296049
[debug] [2025-10-04T21:30:32.146Z] Checked if tokens are valid: false, expires at: 1759597296049
[debug] [2025-10-04T21:30:32.146Z] > refreshing access token with scopes: []
[debug] [2025-10-04T21:30:32.148Z] >>> [apiv2][query] POST https://www.googleapis.com/oauth2/v3/token [none]
[debug] [2025-10-04T21:30:32.148Z] >>> [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-10-04T21:30:32.269Z] <<< [apiv2][status] POST https://www.googleapis.com/oauth2/v3/token 200
[debug] [2025-10-04T21:30:32.270Z] <<< [apiv2][body] POST https://www.googleapis.com/oauth2/v3/token [omitted]
[debug] [2025-10-04T21:30:32.278Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/bpdesign-pro:testIamPermissions [none]
[debug] [2025-10-04T21:30:32.278Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/bpdesign-pro:testIamPermissions x-goog-quota-user=projects/bpdesign-pro
[debug] [2025-10-04T21:30:32.278Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/bpdesign-pro:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[debug] [2025-10-04T21:30:32.895Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/bpdesign-pro:testIamPermissions 200
[debug] [2025-10-04T21:30:32.895Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/bpdesign-pro:testIamPermissions {"permissions":["datastore.indexes.create","datastore.indexes.delete","datastore.indexes.list","datastore.indexes.update","firebase.projects.get"]}
[info] 
[info] === Deploying to 'bpdesign-pro'...
[info] 
[info] i  deploying firestore 
[info] i  firestore: reading indexes from firestore.indexes.json... 
[info] i  cloud.firestore: checking firestore.rules for compilation errors... 
[debug] [2025-10-04T21:30:32.898Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:32.898Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:32.898Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro:test [none]
[debug] [2025-10-04T21:30:32.898Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro:test [omitted]
[debug] [2025-10-04T21:30:33.267Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro:test 200
[debug] [2025-10-04T21:30:33.268Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro:test {}
[info] +  cloud.firestore: rules file firestore.rules compiled successfully 
[debug] [2025-10-04T21:30:33.269Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:33.269Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:33.269Z] >>> [apiv2][query] GET https://firestore.googleapis.com/v1/projects/bpdesign-pro/databases/(default) [none]
[debug] [2025-10-04T21:30:33.403Z] <<< [apiv2][status] GET https://firestore.googleapis.com/v1/projects/bpdesign-pro/databases/(default) 200
[debug] [2025-10-04T21:30:33.403Z] <<< [apiv2][body] GET https://firestore.googleapis.com/v1/projects/bpdesign-pro/databases/(default) {"name":"projects/bpdesign-pro/databases/(default)","uid":"7739eaf9-225b-40ac-adf6-6cd34486c877","createTime":"2025-09-26T11:03:53.458151Z","updateTime":"2025-09-26T11:03:53.458151Z","locationId":"eur3","type":"FIRESTORE_NATIVE","concurrencyMode":"PESSIMISTIC","versionRetentionPeriod":"3600s","earliestVersionTime":"2025-10-04T20:30:33.514961Z","appEngineIntegrationMode":"DISABLED","keyPrefix":"e","pointInTimeRecoveryEnablement":"POINT_IN_TIME_RECOVERY_DISABLED","deleteProtectionState":"DELETE_PROTECTION_DISABLED","databaseEdition":"STANDARD","freeTier":true,"realtimeUpdatesMode":"REALTIME_UPDATES_ENABLED","etag":"IOSTlu2+i5ADMMf0v4qs9o8D"}
[debug] [2025-10-04T21:30:33.404Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:33.404Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:33.404Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases pageSize=10&pageToken=
[debug] [2025-10-04T21:30:34.050Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases 200
[debug] [2025-10-04T21:30:34.050Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases {"releases":[{"name":"projects/bpdesign-pro/releases/cloud.firestore","rulesetName":"projects/bpdesign-pro/rulesets/40fcebe5-fdbd-4184-8c4a-f1cfa833248b","createTime":"2025-09-26T11:03:59.632874Z","updateTime":"2025-10-03T22:02:13.820468Z"},{"name":"projects/bpdesign-pro/releases/firebase.storage/bpdesign-pro.firebasestorage.app","rulesetName":"projects/bpdesign-pro/rulesets/5fd3e9f3-b76e-465d-80b8-0369e12bc9a4","createTime":"2025-09-26T11:26:29.201541Z","updateTime":"2025-10-02T12:32:30.044629Z"}]}
[debug] [2025-10-04T21:30:34.064Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:34.064Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:34.064Z] >>> [apiv2][query] GET https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets/40fcebe5-fdbd-4184-8c4a-f1cfa833248b [none]
[debug] [2025-10-04T21:30:34.323Z] <<< [apiv2][status] GET https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets/40fcebe5-fdbd-4184-8c4a-f1cfa833248b 200
[debug] [2025-10-04T21:30:34.323Z] <<< [apiv2][body] GET https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets/40fcebe5-fdbd-4184-8c4a-f1cfa833248b [omitted]
[info] i  firestore: uploading rules firestore.rules... 
[debug] [2025-10-04T21:30:34.324Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:34.325Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:34.325Z] >>> [apiv2][query] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets [none]
[debug] [2025-10-04T21:30:34.325Z] >>> [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets [omitted]
[debug] [2025-10-04T21:30:34.683Z] <<< [apiv2][status] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets 200
[debug] [2025-10-04T21:30:34.684Z] <<< [apiv2][body] POST https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/rulesets {"name":"projects/bpdesign-pro/rulesets/5726e214-c6e5-48dc-8a73-6ef458d07d0d","source":{"files":[{"content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    // Règles pour les projets\n    match /projects/{projectId} {\n      // Permettre la lecture et l'écriture aux propriétaires et collaborateurs\n      allow read, write: if request.auth != null && (\n        resource.data.ownerId == request.auth.uid ||\n        request.auth.uid in resource.data.collaborators ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;\n    }\n\n    // Règles pour les profils utilisateurs\n    match /users/{userId} {\n      // Les utilisateurs peuvent lire et modifier leur propre profil\n      allow read, write: if request.auth != null && request.auth.uid == userId;\n\n      // Les admins peuvent lire tous les profils\n      allow read: if request.auth != null &&\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';\n\n      // Les admins peuvent modifier les rôles\n      allow write: if request.auth != null &&\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';\n    }\n\n    // Règles pour les templates (lecture seule pour tous les utilisateurs authentifiés)\n    match /templates/{templateId} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null &&\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';\n    }\n\n    // Règles pour les documents uploadés\n    match /documents/{documentId} {\n      allow read, write: if request.auth != null && (\n        resource.data.ownerId == request.auth.uid ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.ownerId;\n    }\n\n    // Règles pour les analyses de projets\n    match /projectAnalyses/{analysisId} {\n      // Permettre lecture et écriture au propriétaire\n      allow read, write: if request.auth != null && (\n        resource.data.userId == request.auth.uid ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'financial_analyst'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié et propriétaire\n      allow create: if request.auth != null && (\n        request.auth.uid == request.resource.data.userId ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'financial_analyst'\n      );\n    }\n\n    // Règles pour les configurations d'export\n    match /exports/{exportId} {\n      // Permettre la lecture et l'écriture au propriétaire\n      allow read, write: if request.auth != null && (\n        resource.data.userId == request.auth.uid ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié et propriétaire\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;\n    }\n\n    // Règles pour les fiches synoptiques\n    match /fichesSynoptiques/{ficheId} {\n      // Permettre la lecture à tous les utilisateurs authentifiés\n      // (car le document peut ne pas exister encore)\n      allow read: if request.auth != null;\n      \n      // Permettre l'écriture au propriétaire ou admin\n      allow write: if request.auth != null && (\n        (resource == null || resource.data.userId == request.auth.uid) ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié et propriétaire\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;\n    }\n\n    // Règles pour les analyses financières historiques\n    match /analysesFinancieresHistoriques/{analyseId} {\n      // Permettre la lecture et l'écriture au propriétaire\n      allow read, write: if request.auth != null && (\n        resource.data.userId == request.auth.uid ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié et propriétaire\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;\n    }\n\n    // Règles pour les tableaux financiers\n    match /tableauxFinanciers/{tableauxId} {\n      // Permettre la lecture et l'écriture au propriétaire\n      allow read, write: if request.auth != null && (\n        resource.data.userId == request.auth.uid ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié et propriétaire\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;\n    }\n\n    // Règles pour les relations bancaires\n    match /relationsBancaires/{relationId} {\n      // Permettre la lecture et l'écriture au propriétaire\n      allow read, write: if request.auth != null && (\n        resource.data.userId == request.auth.uid ||\n        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'\n      );\n\n      // Permettre la création si l'utilisateur est authentifié et propriétaire\n      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;\n    }\n\n    // Règles par défaut - refuser tout accès non spécifié\n    match /{document=**} {\n      allow read, write: if false;\n    }\n  }\n}","name":"firestore.rules"}]},"createTime":"2025-10-04T21:30:34.722863Z","metadata":{"services":["cloud.firestore"]}}
[debug] [2025-10-04T21:30:34.684Z] [rules] created ruleset projects/bpdesign-pro/rulesets/5726e214-c6e5-48dc-8a73-6ef458d07d0d
[debug] [2025-10-04T21:30:34.685Z] [rules] releasing cloud.firestore/(default) with ruleset projects/bpdesign-pro/rulesets/5726e214-c6e5-48dc-8a73-6ef458d07d0d
[debug] [2025-10-04T21:30:34.685Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:34.685Z] Checked if tokens are valid: true, expires at: 1759617031270
[debug] [2025-10-04T21:30:34.686Z] >>> [apiv2][query] PATCH https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases/cloud.firestore/(default) [none]
[debug] [2025-10-04T21:30:34.686Z] >>> [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases/cloud.firestore/(default) {"release":{"name":"projects/bpdesign-pro/releases/cloud.firestore/(default)","rulesetName":"projects/bpdesign-pro/rulesets/5726e214-c6e5-48dc-8a73-6ef458d07d0d"}}
[debug] [2025-10-04T21:30:35.152Z] <<< [apiv2][status] PATCH https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases/cloud.firestore/(default) 200
[debug] [2025-10-04T21:30:35.153Z] <<< [apiv2][body] PATCH https://firebaserules.googleapis.com/v1/projects/bpdesign-pro/releases/cloud.firestore/(default) {"name":"projects/bpdesign-pro/releases/cloud.firestore","rulesetName":"projects/bpdesign-pro/rulesets/5726e214-c6e5-48dc-8a73-6ef458d07d0d","createTime":"2025-09-26T11:03:59.632874Z","updateTime":"2025-10-04T21:30:35.195857Z"}
[debug] [2025-10-04T21:30:35.153Z] [rules] updated release projects/bpdesign-pro/releases/cloud.firestore
[info] +  firestore: released rules firestore.rules to cloud.firestore 
[info] 
[info] +  Deploy complete! 
[info] 
[info] Project Console: https://console.firebase.google.com/project/bpdesign-pro/overview
